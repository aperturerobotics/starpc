// @generated by protoc-gen-es-lite unknown with parameter "target=ts,ts_nocheck=false"
// @generated from file github.com/aperturerobotics/starpc/srpc/rpcproto.proto (package srpc, syntax proto3)
/* eslint-disable */

import type { MessageType, PartialFieldInfo } from "@aptre/protobuf-es-lite";
import { createMessageType, Message } from "@aptre/protobuf-es-lite";

export const protobufPackage = "srpc";

/**
 * CallStart requests starting a new RPC call.
 *
 * @generated from message srpc.CallStart
 */
export type CallStart = Message<{
  /**
   * RpcService is the service to contact.
   * Must be set.
   *
   * @generated from field: string rpc_service = 1;
   */
  rpcService?: string;
  /**
   * RpcMethod is the RPC method to call.
   * Must be set.
   *
   * @generated from field: string rpc_method = 2;
   */
  rpcMethod?: string;
  /**
   * Data contains the request or the first message in the stream.
   * Optional if streaming.
   *
   * @generated from field: bytes data = 3;
   */
  data?: Uint8Array;
  /**
   * DataIsZero indicates Data is set with an empty message.
   *
   * @generated from field: bool data_is_zero = 4;
   */
  dataIsZero?: boolean;

}>;

export const CallStart: MessageType<CallStart> = createMessageType(
  {
    typeName: "srpc.CallStart",
    fields: [
        { no: 1, name: "rpc_service", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "rpc_method", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
        { no: 4, name: "data_is_zero", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    ] as readonly PartialFieldInfo[],
    packedByDefault: true,
  },
);

/**
 * CallData contains a message in a streaming RPC sequence.
 *
 * @generated from message srpc.CallData
 */
export type CallData = Message<{
  /**
   * Data contains the packet in the sequence.
   *
   * @generated from field: bytes data = 1;
   */
  data?: Uint8Array;
  /**
   * DataIsZero indicates Data is set with an empty message.
   *
   * @generated from field: bool data_is_zero = 2;
   */
  dataIsZero?: boolean;
  /**
   * Complete indicates the RPC call is completed.
   *
   * @generated from field: bool complete = 3;
   */
  complete?: boolean;
  /**
   * Error contains any error that caused the RPC to fail.
   * If set, implies complete=true.
   *
   * @generated from field: string error = 4;
   */
  error?: string;

}>;

export const CallData: MessageType<CallData> = createMessageType(
  {
    typeName: "srpc.CallData",
    fields: [
        { no: 1, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
        { no: 2, name: "data_is_zero", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
        { no: 3, name: "complete", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
        { no: 4, name: "error", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ] as readonly PartialFieldInfo[],
    packedByDefault: true,
  },
);

/**
 * Packet is a message sent over a srpc packet connection.
 *
 * @generated from message srpc.Packet
 */
export type Packet = Message<{

  /**
   * Body is the packet body.
   *
   * @generated from oneof srpc.Packet.body
   */
  body?: {
    value?: undefined,
    case: undefined
  } | {
    /**
     * CallStart initiates a new call.
     *
     * @generated from field: srpc.CallStart call_start = 1;
     */
    value: CallStart;
    case: "callStart";
  } | {
    /**
     * CallData is a message in a streaming RPC sequence.
     *
     * @generated from field: srpc.CallData call_data = 2;
     */
    value: CallData;
    case: "callData";
  } | {
    /**
     * CallCancel cancels the call.
     *
     * @generated from field: bool call_cancel = 3;
     */
    value: boolean;
    case: "callCancel";
  };

}>;

export const Packet: MessageType<Packet> = createMessageType(
  {
    typeName: "srpc.Packet",
    fields: [
        { no: 1, name: "call_start", kind: "message", T: () => CallStart, oneof: "body" },
        { no: 2, name: "call_data", kind: "message", T: () => CallData, oneof: "body" },
        { no: 3, name: "call_cancel", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "body" },
    ] as readonly PartialFieldInfo[],
    packedByDefault: true,
  },
);

