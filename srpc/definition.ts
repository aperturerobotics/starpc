import { MessageDefinition } from './message'

// Definition describes the service definitions generated by ts-proto.
// use --ts_proto_opt=outputServices=default,outputServices=generic-definitions
export interface Definition {
  // name is the name of the service.
  // e.x.: Echo
  name: string
  // fullName is the fully qualified name of the service
  // e.x.: echoer.Echoer
  fullName: string
  // methods is the set of RPC methods.
  methods: { [id: string]: MethodDefinition<unknown, unknown> }
}

// MethodDefinition describes the method definitions generated by ts-proto.
// use --ts_proto_opt=outputServices=default,outputServices=generic-definitions
export interface MethodDefinition<RequestT, ResponseT> {
  // name is the name and function name of the method.
  // e.x.: Echo
  name: string
  // requestType is the object used for the request.
  requestType: MessageDefinition<RequestT>
  // requestStream indicates the request is a stream.
  requestStream: boolean
  // responseType is the object used for the response.
  responseType: MessageDefinition<ResponseT>
  // responseStream indicates the response is a stream.
  responseStream: boolean
}
