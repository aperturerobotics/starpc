{
  "name": "starpc",
  "version": "0.31.12",
  "description": "Streaming protobuf RPC service protocol over any two-way channel.",
  "license": "MIT",
  "author": {
    "name": "Aperture Robotics LLC.",
    "email": "support@aperture.us",
    "url": "http://aperture.us"
  },
  "contributors": [
    {
      "name": "Christian Stewart",
      "email": "christian@aperture.us",
      "url": "http://github.com/paralin"
    }
  ],
  "bin": {
    "protoc-gen-es-starpc": "./cmd/protoc-gen-es-starpc/protoc-gen-es-starpc"
  },
  "type": "module",
  "exports": {
    ".": {
      "import": "./dist/index.js",
      "require": "./dist/index.js",
      "types": "./dist/index.d.ts"
    }
  },
  "files": [
    "!**/*.tsbuildinfo",
    "Makefile",
    "dist",
    "e2e",
    "echo",
    "go.mod",
    "go.sum",
    "integration",
    "srpc",
    "cmd/protoc-gen-es-starpc"
  ],
  "repository": {
    "url": "git+ssh://git@github.com/aperturerobotics/starpc.git"
  },
  "scripts": {
    "clean": "rimraf ./dist",
    "build": "npm run clean && tsc --project tsconfig.build.json --outDir ./dist/",
    "check": "npm run typecheck",
    "typecheck": "tsc --noEmit",
    "deps": "depcheck --ignores 'bufferutil,utf-8-validate,rimraf,starpc,@aptre/protobuf-es-lite,tsx'",
    "codegen": "npm run gen",
    "ci": "npm run build && npm run lint:js && npm run lint:go",
    "format": "npm run format:go && npm run format:js && npm run format:config",
    "format:config": "prettier --write tsconfig.json package.json",
    "format:go": "make format",
    "format:js": "prettier --write './{srpc,echo,e2e,integration,rpcstream,cmd}/**/(*.ts|*.tsx|*.html|*.css)'",
    "gen": "make genproto",
    "test": "npm run test:js && npm run test:go",
    "test:go": "make test",
    "build:e2e": "npm run build && cd e2e && esbuild e2e.ts --sourcemap --outfile=e2e.cjs --bundle --platform=node",
    "test:js": "npm run build:e2e && cd e2e && node ./e2e.cjs",
    "debug:js": "npm run build:e2e && cd e2e && node --inspect --inspect-brk ./e2e.cjs",
    "test:integration": "make integration",
    "integration": "npm run test:integration",
    "lint": "npm run lint:go && npm run lint:js",
    "lint:go": "make lint",
    "lint:js": "ESLINT_USE_FLAT_CONFIG=false eslint -c .eslintrc.cjs --ignore-pattern *.js --ignore-pattern *.d.ts ./",
    "release:version": "npm version patch -m \"release: v%s\" --no-git-tag-version",
    "release:commit": "git reset && git add package.json && git commit -s -m \"release: v$npm_package_version\" && git tag v$npm_package_version",
    "release:publish": "git push && git push --tags && npm run build && npm publish",
    "release": "npm run release:version && npm run release:commit",
    "prepare": "go mod vendor && rimraf ./hack/bin",
    "precommit": "lint-staged"
  },
  "preferUnplugged": true,
  "pre-commit": [
    "precommit"
  ],
  "lint-staged": {
    "package.json": "prettier --write",
    "./{srpc,echo,e2e,integration,rpcstream,cmd}/**/(*.ts|*.tsx|*.html|*.css)": "prettier --write"
  },
  "prettier": {
    "semi": false,
    "singleQuote": true
  },
  "devDependencies": {
    "@typescript-eslint/eslint-plugin": "^7.8.0",
    "@typescript-eslint/parser": "^7.8.0",
    "depcheck": "^1.4.6",
    "esbuild": "^0.20.0",
    "eslint": "^9.1.1",
    "eslint-config-prettier": "^9.1.0",
    "lint-staged": "^15.2.2",
    "pre-commit": "^1.2.2",
    "prettier": "^3.2.4",
    "rimraf": "^5.0.1",
    "tsx": "^4.7.3",
    "typescript": "^5.3.2"
  },
  "dependencies": {
    "@aptre/it-ws": "^1.0.0",
    "@aptre/protobuf-es-lite": "^0.2.15",
    "@chainsafe/libp2p-yamux": "^6.0.2",
    "@libp2p/interface": "^1.3.0",
    "@libp2p/logger": "^4.0.11",
    "event-iterator": "^2.0.0",
    "isomorphic-ws": "^5.0.0",
    "it-first": "^3.0.6",
    "it-pipe": "^3.0.1",
    "it-pushable": "^3.2.3",
    "it-stream-types": "^2.0.1",
    "uint8arraylist": "^2.4.7",
    "ws": "^8.17.0"
  }
}
